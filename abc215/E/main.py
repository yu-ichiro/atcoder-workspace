#!/usr/bin/env python3
# Generated by 2.6.0
# Copyright 2021 Yuichiro Smith
import sys

MOD = 998244353  # type: int

CONTEST_PATTERN = 10


def solve(N: int, S: str):
    dp = [
        [
            0
            for _ in range(CONTEST_PATTERN)
        ]
        for _ in range(1 << CONTEST_PATTERN)
    ]
    for s in S:
        dp_temp = [row[:] for row in dp]
        s = ord(s) - ord('A')
        exact = 1 << s
        for mask in range(1 << CONTEST_PATTERN):
            if mask & exact:
                dp_temp[mask][s] += dp[mask][s]
                dp_temp[mask][s] %= MOD
            else:
                dp_temp[mask | exact][s] += sum(dp[mask][j] for j in range(10) if mask & (1 << j))
                dp_temp[mask | exact][s] %= MOD
        dp_temp[exact][s] += 1
        dp = dp_temp

    answer = 0
    for row in dp:
        answer += sum(row)
    print(answer % MOD)
    return


def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, S)


if __name__ == '__main__':
    main()
