#!/usr/bin/env python3
# Generated by AtCoder Tools 2.8.0
# Copyright 2021 Yuichiro Smith
import sys

original = "abcdefghijklmnopqrstuvwxyz"


def solve(X: str, N: int, S: "List[str]"):
    order = {
        c: o
        for o, c in zip(original, X)
    }
    mapped_names = [
        ("".join(map(lambda c: order[c], name)), name)
        for name in S
    ]
    for _, name in sorted(mapped_names):
        print(name)


def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = next(tokens)  # type: str
    N = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(X, N, S)


if __name__ == '__main__':
    main()
