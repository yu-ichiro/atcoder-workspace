#!/usr/bin/env python3
# Generated by AtCoder Tools 2.8.0
# Copyright 2021 Yuichiro Smith
import sys


def base_n(n: int, k: int, chars="0123456789abcdefghijklmnopqrstuvwxyz") -> str:
    q, r = divmod(k, n)
    return (base_n(n, q, chars) if q > 0 else "") + chars[r]


def solve(N: int, L: int):
    base = 2 * 3**(L-1)
    for k in range(base, base+N):
        print(base_n(3, k, chars="120"))
    for k in range(base, base+N):
        print(base_n(3, k, chars="201"))
    for k in range(base, base+N):
        print(base_n(3, k, chars="012"))


def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    L = int(next(tokens))  # type: int
    solve(N, L)


if __name__ == '__main__':
    main()
