#!/usr/bin/env python3
# Generated by AtCoder Tools 2.8.0
# Copyright 2021 Yuichiro Smith
import sys


def solve(N: int, M: int, a: "List[int]", b: "List[int]"):
    dp_select = (0, 0, 0)
    dp_no_select = (0, 0, 0)
    for a, b in sorted(zip(a, b), key=lambda pair: (min(pair), max(pair))):
        select_count, select_a, select_b = dp_select
        no_select_count, no_select_a, no_select_b = dp_no_select

    print(dp[N][N][0])


def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    a = [int()] * (M)  # type: "List[int]"
    b = [int()] * (M)  # type: "List[int]"
    for i in range(M):
        a[i] = int(next(tokens))
        b[i] = int(next(tokens))
    solve(N, M, a, b)


if __name__ == '__main__':
    main()
