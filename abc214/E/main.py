#!/usr/bin/env python3
from heapq import heappush, heappop

YES = "Yes"  # type: str
NO = "No"  # type: str

Boxlen = 10**9
inf = 10**10

def solve(N, LR):
    LR.sort()
    LR.append((inf, inf))
    i = 0
    l = 1
    heap = []
    while heap or i < N:
        if not heap:
            l = LR[i][0]
        while LR[i][0] == l:
            heappush(heap, LR[i][1])
            i += 1
        r = heappop(heap)
        if l > r:
            print(NO)
            return
        l += 1
    print(YES)


def test():
    N = int(input())
    LR = [tuple(map(int, input().split())) for _ in range(N)]
    boxes = set()
    solve(N, LR)

# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    # Failed to predict input format
    T = int(input())
    for _ in range(T):
        test()

if __name__ == '__main__':
    main()
