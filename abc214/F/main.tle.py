#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int
sys.setrecursionlimit(10**9)

cache = {}

def solve(S: str):
    if S not in cache:
        c = S[-1]
        if S == c:
            cache[S] = {c}
        else:
            cache[S] = solve(S[:-1]) | {c}
            s2 = S[:-2]
            if s2:
                cache[S] |= {r + c for r in solve(s2)} 
    return cache[S]

# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    print(len(solve(S)) % MOD)

if __name__ == '__main__':
    main()
