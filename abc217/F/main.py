#!/usr/bin/env python3
# Generated by AtCoder Tools 2.8.0
# Copyright 2021 Yuichiro Smith
import sys

MOD = 998244353  # type: int


def solve(N: int, M: int, A: "List[int]", B: "List[int]"):
    length = 2 * N
    student_set = set(range(1, length+1))
    if student_set - set(A) - set(B):
        return 0
    for a, b in zip(A, B):
        if b - a == 1:
            break
    else:
        return 0

    return


def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    A = [int()] * (M)  # type: "List[int]"
    B = [int()] * (M)  # type: "List[int]"
    for i in range(M):
        A[i] = int(next(tokens))
        B[i] = int(next(tokens))
    print(solve(N, M, A, B))


if __name__ == '__main__':
    main()
