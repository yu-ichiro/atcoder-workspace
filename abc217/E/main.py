#!/usr/bin/env python3
# Generated by AtCoder Tools 2.8.0
# Copyright 2021 Yuichiro Smith

import heapq
from collections import deque


def solve(Q: int, queries: "List[Tuple[int, ...]]"):
    heap = []
    unsorted = deque()
    last_2 = 0
    for i, query in enumerate(reversed(queries)):
        if query[0] == 2:
            last_2 = Q - i - 1
            break
    for i, query in enumerate(queries):
        if i > last_2:
            break
        if query[0] == 1:
            unsorted.append(query[1])
        if query[0] == 2:
            if heap:
                print(heapq.heappop(heap))
            else:
                print(unsorted.popleft())
        if query[0] == 3:
            for x in unsorted:
                heapq.heappush(heap, x)
            unsorted.clear()


def main():
    # Failed to predict input format
    Q = int(input())
    queries = [
        tuple(map(int, input().split()))
        for _ in range(Q)
    ]
    solve(Q, queries)


if __name__ == '__main__':
    main()
