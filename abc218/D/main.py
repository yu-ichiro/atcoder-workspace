#!/usr/bin/env python3
# Generated by AtCoder Tools 2.8.0
# Copyright 2021 Yuichiro Smith
import sys
from itertools import combinations


def solve(N: int, X: "List[int]", Y: "List[int]"):
    points = sorted(zip(X, Y))
    points_set = set(points)
    result = 0
    for (px, py), (qx, qy) in combinations(points, 2):
        if px >= qx or py >= qy:
            continue
        if (px, qy) not in points_set or (qx, py) not in points_set:
            continue
        result += 1
    print(result)


def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    x = [int()] * (N)  # type: "List[int]"
    y = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        x[i] = int(next(tokens))
        y[i] = int(next(tokens))
    solve(N, x, y)


if __name__ == '__main__':
    main()
